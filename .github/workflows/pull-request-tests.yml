# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    
    services:
      db:
        image: mariadb
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
    # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
    # uses: shivammathur/setup-php@v2
    - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
    - name: Copy .env.test.local
      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Cache npm
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-
    - name: Install Dependencies
      run: |
        composer install --no-scripts --no-progress --no-suggest
        npm ci
    - name: Symfony Server Start
      run: php -S localhost:8000 -t public/ &
      env:
        APP_ENV: test
        APP_DEBUG: 0
        DATABASE_URL: mysql://test_user:test_password@localhost:3306/test_db
        APP_URL: https://localhost:8000
        HTTP_HOST_HTTPS: false
    - name: Symfony PHPUnit Tests
      run: php bin/phpunit --coverage-text --colors=never
    - name: ESlint
      run: npm run lint
    - name: Build Verify
      run: npm run prod
    - name: Cypress Tests
      uses: cypress-io/github-action@v2
      env:
        CYPRESS_BASE_URL: http://localhost:8000
